'use strict'

module.exports = {
  up: async (queryInterface, Sequelize) => {
    try {
      // Add indices
      await queryInterface.addIndex('casino_transactions', {
        fields: ['round_id', 'round_status'],
        name: 'casino_transaction_round_id_round_status_idx',
        using: 'BTREE',
        operator: 'COLLATE pg_catalog."default" ASC NULLS LAST'
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['created_at'],
        name: 'casino_transactions_created_at_brin',
        using: 'BRIN'
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['round_id'],
        name: 'casino_transactions_round_id_index',
        using: 'BTREE',
        operator: 'COLLATE pg_catalog."default" ASC NULLS LAST'
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['user_id'],
        name: 'casino_transactions_user_id_index',
        using: 'BTREE',
        operator: 'ASC NULLS LAST'
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['round_id'],
        name: 'idx_round_id_action_type_bet_hash',
        using: 'HASH',
        where: {
          action_type: 'BET'
        }
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['round_id'],
        name: 'idx_round_id_status_true_hash',
        using: 'HASH',
        where: {
          round_status: true
        }
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['transaction_id'],
        name: 'idx_transaction_id_hash',
        using: 'HASH',
        operator: 'COLLATE pg_catalog."default"'
      })

      await queryInterface.addIndex('casino_transactions', {
        fields: ['transaction_id'],
        name: 'idx_transaction_id_win_lost_partial_hash',
        using: 'HASH',
        where: {
          action_type: {
            [Sequelize.Op.in]: ['WIN', 'LOST']
          }
        }
      })
    } catch (error) {
      console.error('Error while adding indices:', error)
    }
  },

  down: async (queryInterface, Sequelize) => {
    try {
      // Remove indices
      await queryInterface.removeIndex('casino_transactions', 'casino_transaction_round_id_round_status_idx')
      await queryInterface.removeIndex('casino_transactions', 'casino_transactions_created_at_brin')
      await queryInterface.removeIndex('casino_transactions', 'casino_transactions_round_id_index')
      await queryInterface.removeIndex('casino_transactions', 'casino_transactions_user_id_index')
      await queryInterface.removeIndex('casino_transactions', 'idx_round_id_action_type_bet_hash')
      await queryInterface.removeIndex('casino_transactions', 'idx_round_id_status_true_hash')
      await queryInterface.removeIndex('casino_transactions', 'idx_transaction_id_hash')
      await queryInterface.removeIndex('casino_transactions', 'idx_transaction_id_win_lost_partial_hash')
    } catch (error) {
      console.error('Error while removing indices:', error)
    }
  }
}
